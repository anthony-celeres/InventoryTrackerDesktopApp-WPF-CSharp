<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UIDesign">

    <local:QuantityToBrushConverter x:Key="QuantityToBrushConverter"/>
    <local:UpdateStockContentConverter x:Key="UpdateStockContentConverter" />

    <!-- Style for only the Status column cell -->
    <DataTemplate x:Key="RoundedStatusCellTemplate">
        <Border Background="{Binding Quantity, Converter={StaticResource QuantityToBrushConverter}}"
            CornerRadius="6"
            Padding="4"
            Margin="2"
            HorizontalAlignment="Left"
            VerticalAlignment="Center">
            <TextBlock Text="{Binding Status}"
                   Foreground="#1d1d1d"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   FontWeight="SemiBold"/>
        </Border>
    </DataTemplate>

    <!-- Round Text Box Style -->
    <Style TargetType="TextBox" x:Key="RoundedTextBox">
        <Setter Property="Background" Value="#FAFAFA"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#4681A8"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Rounded Border -->
                        <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            SnapsToDevicePixels="True" />

                        <!-- ContentPresenter for selected item -->
                        <ContentPresenter x:Name="ContentPresenter"
                                      Margin="6,0,30,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      RecognizesAccessKey="True" />

                        <!-- Drop-down button -->
                        <ToggleButton x:Name="DropDownToggle"
                                  Grid.Column="1"
                                  Focusable="False"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Stretch"
                                  Width="30"
                                  Background="Transparent"
                                  BorderBrush="{x:Null}">
                            <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="#4681A8"
                              Width="8" Height="4"/>
                        </ToggleButton>

                        <!-- Popup Items -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Border Background="White"
                                BorderBrush="#CCC"
                                BorderThickness="1"
                                CornerRadius="6">
                                <ScrollViewer Margin="4">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Hover and focus effects -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#5A9BD5"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="#2C6EAA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded Search Text Box Style -->
    <Style TargetType="TextBox" x:Key="SearchTextBox">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="#4681A8"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Hover effect -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#5A9BD5"/>
                <!-- Lighter blue -->
            </Trigger>

            <!-- Focus effect -->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="#2C6EAA"/>
                <!-- Darker blue when typing -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded Normal Button Style -->
    <Style TargetType="Button" x:Key="RoundedNormalButton">
        <Setter Property="Background" Value="#4681a8"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#37668A"/>
                <!-- Darker blue -->
                <Setter Property="BorderBrush" Value="#2D5473"/>
                <!-- Matching blue border -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded AddButton Style -->
    <Style TargetType="Button" x:Key="RoundedAddButton">
        <Setter Property="Background" Value="#28A745"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#218838"/>
                <!-- Darker green -->
                <Setter Property="BorderBrush" Value="#1c7430"/>
                <!-- Matching dark green border -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded ExitButton Style -->
    <Style TargetType="Button" x:Key="RoundedExitButton">
        <Setter Property="Background" Value="Tomato"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d3392a"/>
                <!-- Darker tomato -->
                <Setter Property="BorderBrush" Value="#b92b1d"/>
                <!-- Matching red border -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded Escape Button Style -->
    <Style TargetType="Button" x:Key="RoundedEscapeButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Tomato"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d3392a"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="UpdateStockButton">
        <Setter Property="Background" Value="#4681a8"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="#1d1d1d"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#37668A"/>
                <Setter Property="BorderBrush" Value="#2D5473"/>
            </Trigger>
            <!-- DataTrigger when panel is open -->
            <DataTrigger Binding="{Binding IsUpdatePanelOpen}" Value="True">
                <Setter Property="Background" Value="Firebrick"/>
                <Setter Property="BorderBrush" Value="DarkRed"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid Row Style -->
    <Style TargetType="DataGridRow" x:Key="RowStyle">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#2b2b2b"/>
        <Setter Property="BorderBrush" Value="#3a3a3a"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#444"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#007acc"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
